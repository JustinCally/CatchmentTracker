% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rolling_join.R
\name{rolling_join}
\alias{rolling_join}
\title{Rolling Join}
\usage{
rolling_join(
  x,
  y,
  by.x,
  pre.y,
  post.y,
  id.name = "ID",
  j_max = Inf,
  remove_loops = TRUE,
  quiet = F,
  return_dt = FALSE
)
}
\arguments{
\item{x}{object of class data.frame that acts as the starting data.frame (left-side)}

\item{y}{object of class data.frame that acts as a lookup table and is continually joined to the rolling table until exhausted}

\item{by.x}{character; column name in object \code{x} that is used to join to \code{y}}

\item{pre.y}{character; column name in object \code{y} that is used to join to \code{x} on the first iteration and to itself on future iterations.}

\item{post.y}{character; column name in object \code{y} that is used to join to itself on the 2nd iteration onwards.}

\item{id.name}{character; prefix of the column to be written in the returned data.frame. This prefix will be followed with "_i", where i is the iteration of the join.}

\item{j_max}{numeric; number of maximum joins to allow before exiting the loop (Inf by default)}

\item{remove_loops}{logical; whether to remove self-recursing loops whereby a row of the data.frame continually joins on itself and produces the same recurring process (TRUE by default).}

\item{quiet}{Supresses messages specifying iteration number (default is false)}

\item{return_dt}{return a data.table instead of data.frame}
}
\value{
data.frame; wide formatted
}
\description{
This will left join df \code{x} to df \code{y} by (\code{by.x} = \code{pre.y}) and then will
take \code{post.y} and treat that as the new \code{by.x} until exhausted
}
\note{
The join must be by a single column
}
\examples{

# Make mock data
}
